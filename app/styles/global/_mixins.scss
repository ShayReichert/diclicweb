@import "./variables";
@import "./functions";

// ----- MEDIA QUERIES ----- //

@mixin devices($breakpoint) {
  @if $breakpoint == min_large_screen {
    @media only screen and (min-width: $min_large_screen) {
      @content;
    }
  }

  @if $breakpoint == desktop {
    @media only screen and (max-width: $desktop) {
      @content;
    }
  }

  @if $breakpoint == laptop {
    @media only screen and (max-width: $laptop) {
      @content;
    }
  }

  @if $breakpoint == large_tablet {
    @media only screen and (max-width: $large_tablet) {
      @content;
    }
  }

  @if $breakpoint == tablet {
    @media only screen and (max-width: $tablet) {
      @content;
    }
  }

  @if $breakpoint == mobile {
    @media only screen and (max-width: $mobile) {
      @content;
    }
  }
}

// ----- SIZES ----- //

@mixin fluid-font($min-font-size, $max-font-size, $min-vw: $mobile, $max-vw: $desktop) {
  // Source : https://gist.github.com/mvsde/7c66cdde4308ed155f53f7002433254c
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;

      @media (min-width: $min-vw) {
        font-size: calc(
          #{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})
        );
      }

      @media (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

@mixin size($width: 100%, $height: $width) {
  width: $width;
  height: $height;
}

// ----- PSEUDO ELEMENTS ----- //

@mixin before($width: 1rem, $height: $width) {
  &:before {
    content: "";
    width: $width;
    height: $height;

    @content;
  }
}

@mixin after($width: 1rem, $height: $width) {
  &:after {
    content: "";
    width: $width;
    height: $height;

    @content;
  }
}

// ----- COMPONENTS ----- //

@mixin button() {
  --font-size: 16px;
  --duration: 0.44s;
  --move-hover: -4px;
  --font-shadow: var(--font-size);

  display: inline-block;
  padding: 1.3rem 5rem;
  border-radius: 50px;
  border: 1px solid $white;
  background-color: transparent;
  color: $white;
  text-decoration: none;
  text-align: center;
  line-height: 1;
  font-size: var(--font-size);
  cursor: pointer;

  div {
    display: flex;
    overflow: hidden;
    text-shadow: 0 var(--font-shadow) 0 $white;
    span {
      display: block;
      backface-visibility: hidden;
      font-style: normal;
      transition: transform var(--duration) ease;
      transform: translateY(var(--m)) translateZ(0);
      $i: 1;
      @while $i < 12 {
        &:nth-child(#{$i}) {
          transition-delay: $i / 20 + s;
        }
        $i: $i + 1;
      }
    }
  }

  &:hover {
    --y: var(--move-hover);
    span {
      --m: calc(var(--font-size) * -1);
    }
  }
}

@mixin underline($width: 40%, $height: 2.5rem) {
  @include after($width, $height) {
    position: absolute;
    background-color: $accent-color;
    z-index: -1;
    border-radius: 1px;

    @content;
  }
}
